function [ T,Y ] = rk4( ode,t,h,yOfx,options)
%RK4  Simple Euler ODE solver
%   [ T,Y ] = rk4( ode,t,h,y,options) estimates y at t+h using the 4th 
%   order Runge-Kutta method: 
%   y(t+h) = y(t) + h/6 (a+2b+2c+d) 
%   dy(t)/dt = f(t,y)
%   a = f(t,y)
%   b = f(t+h/2,y+ha/2)
%   c = f(t+h/2,y+hb/2)
%   d = f(t+h,y+hc)
%The step size h is applied directly.
%   the derivatives of y at t are given by the function ode, t is the time 
%   at which to evaluate the dervatives, h is the step and y is the inital 
%   condition y(t). This method is supplied to allow iterative solution 
%   and comparison to ode45 - it is not recommend to use this method to 
%   produce high quality estimates of a solution. Options is unused.
%   see: https://en.wikipedia.org/wiki/Euler_method
ho2=h/2;
a=ode(t,yOfx); %a is in the space of dy(x)/dx
%TODO annoying transpose - I am doing something wrong
b=ode(t+ho2,yOfx'+ho2*a); %then ho2*a is in the space y(x) 
%TODO annoying transpose - I am doing something wrong
c=ode(t+ho2,yOfx'+ho2*b);
%TODO annoying transpose - I am doing something wrong
d=ode(t+h,yOfx'+h*c);
%TODO annoying transpose - I am doing something wrong
Y=yOfx'+h*(a+2*b+2*c+d)/6;
T=t+h;
end

